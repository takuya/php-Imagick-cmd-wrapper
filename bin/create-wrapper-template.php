<?php

use Illuminate\Support\Str;
use SystemUtil\ComandWrapper;
use Nette\PhpGenerator\ClassType;
use function PHPUnit\TestFixture\func;

require __DIR__.DIRECTORY_SEPARATOR.'../vendor/autoload.php';
function options($cmd){
  $ret = `${cmd}`;
  $out = $ret;
  
  $lines = preg_split( '/\n/', $out );
  $ret = [];
  
  foreach ($lines as $idx => $line){
    if (!preg_match('/^\s{2}-[A-z]/',$line)){
      continue;
    }
    
    for ( $k=1;$k<5;$k++){
      $next = $lines[$idx+$k] ?? '';
      if ( preg_match('/(^\s{2}-[A-z])|(^[A-z])/',$next) ){
        break;
      }
      $next= preg_replace('/^\s+/', ' ', $next);
      $line = $line.$next;
    }
    $ret[]=$line;
    
  }
  
  $ret = collect( $ret )
    ->filter( function( $e ) { return preg_match( '/-[a-z]+/', $e ); } )
    ->map(function($e){
      $ret = preg_match( '/\s+-([-A-z]+) ([A-z]*)\s*([-|A-z\s]*)/', $e, $m );
      $m["-1"] = $e;
      return $m;
    })
    ->map(function($e){
      return [
        "name" => $e[1],
        "arg"  => $e[2]??null,
        "comm" => $e[3]??null,
        "orig" => $e["-1"]
      ];
    })
    ->toArray();
  return $ret;
}

function createClass($classname,$opts){
  $class = new Nette\PhpGenerator\ClassType($classname.'Generated');
  $class->setType(ClassType::TYPE_TRAIT);
  
  $class->addComment('Auto generated From command help');
  
  
  foreach ( $opts as $e ) {
    $name  = preg_replace('/-/','_', $e['name']);
    $name = Str::camel($name);
    $method = $class->addMethod($name);
    $method->addComment($e['comm']);
    if ( $e['arg']){
      $method->addParameter($e["arg"]);
      $method->addBody("return \$this->addOpt('-{$e['name']}', \${$e["arg"]} );");
      
      $method->addComment("@param \${$e['arg']}");
    }else {
      $method->addBody( "return \$this->addOpt('-{$e['name']}');" );
    }
  }
  
  $prefix = "<?php\n\nnamespace SystemUtil\AutoGeneratedTraits;\n\n";
  $src = $prefix.$class;
  file_put_contents(__DIR__."/../src/AutoGeneratedTraits/${classname}Generated.php", $src);
  
}


function main($argv, $argc) {
  
  if (! sizeof($argv)>0){
    return;
  }
  $cmd = $argv[0];
  $opts = options($cmd);
  $class_name = Str::ucfirst($cmd);

  createClass($class_name,$opts);

}


///
///
if (  realpath($argv[0]) == __FILE__){
  array_shift($argv);
  main($argv,sizeof($argv));
}
